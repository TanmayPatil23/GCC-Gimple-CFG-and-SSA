SSA
---


;; Function main (main, funcdef_no=0, decl_uid=1910, cgraph_uid=1, symbol_order=0)

main ()
{
  int c;
  int b;
  int a;
  int _1;
  int _2;
  int _3;
  int _8;

  <bb 2> :
  _1 = a_4(D) + c_5(D);
  _2 = b_6(D) + _1;
  _3 = c_5(D) + a_4(D);
  b_7 = _2 * _3;
  _8 = b_7;
  return _8;

}


Fre1
----


;; Function main (main, funcdef_no=0, decl_uid=1910, cgraph_uid=1, symbol_order=0)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
main ()
{
  int c;
  int b;
  int a;
  int _1;
  int _2;

  <bb 2> :
  _1 = a_4(D) + c_5(D);
  _2 = _1 + b_6(D);
  b_7 = _1 * _2;
  return b_7;

}


Optimized
---------


;; Function main (main, funcdef_no=0, decl_uid=1910, cgraph_uid=1, symbol_order=0) (executed once)

main ()
{
  int c;
  int b;
  int a;
  int _1;
  int _2;

  <bb 2> [local count: 1073741824]:
  _1 = a_3(D) + c_4(D);
  _2 = _1 + b_5(D);
  b_6 = _1 * _2;
  return b_6;

}



Answers
-------

1. In SSA pass it was computed twice without considering the operand  
   order, whereas in the FRE pass we have the computation to be done once 
   only.

2. We can check if there have been further optimisations by checking
   B-4.c.*.optimized file, which is the final file after optimisation.
   In optimized file we come across the elimination of the of redundant
   assignmets. 

3. Not returning b turns the code useless and it just returns 0 as default
   return value for the program.
