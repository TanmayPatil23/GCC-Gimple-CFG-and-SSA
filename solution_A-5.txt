CFG
---

;; Function main (main, funcdef_no=0, decl_uid=1910, cgraph_uid=1, symbol_order=0)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
main ()
{
  int d;
  int c;
  int b;
  int a;
  int D.1920;

  <bb 2> :
  d = 10;
  if (c > d)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  a = 3;
  b = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  a = 2;
  b = 3;

  <bb 5> :
  c = a + b;
  D.1920 = 0;

  <bb 6> :
<L3>:
  return D.1920;

}


SSA
---

;; Function main (main, funcdef_no=0, decl_uid=1910, cgraph_uid=1, symbol_order=0)

main ()
{
  int d;
  int c;
  int b;
  int a;
  int D.1920;
  int _10;

  <bb 2> :
  d_3 = 10;
  if (c_4(D) > d_3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  a_7 = 3;
  b_8 = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  a_5 = 2;
  b_6 = 3;

  <bb 5> :
  # a_1 = PHI <a_7(3), a_5(4)>
  # b_2 = PHI <b_8(3), b_6(4)>
  c_9 = a_1 + b_2;
  _10 = 0;

  <bb 6> :
<L3>:
  return _10;

}


Answers
-------

1. Yes we can observe the use of suffix to the varible to keep track of 
   the times that varible is assigned, as expected in SSA. Maybe (D)
   is used to indicate a default value to the variable, if it is not
   initialised with a value (e.g. c has no value stored in it, in the 
   first if condition of the control flow of the program).

2. From the dumps we may observe that the syntax of phi statements is 
   probably PHI < exp1, exp2, exp3, ...> where "exp" is var(bb) - var is 
   the name of the variable and bb is the number of the basic block in 
   which it was declared in SSA. There will be a "exp" for each
   bb from which control flow can enter the next bb.

3. We could have PHI statements in switch statements and nested if blocks 
   also.
